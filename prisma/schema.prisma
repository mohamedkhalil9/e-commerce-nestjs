// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  firstName String
  lastName String
  username String? @unique
  email String @unique
  password String
  role Role @default(User)
  profileImg String
  gender Gender
  dateOfBirth DateTime
  phone String?
  country String?
  city String?
  address String?
  isActive Boolean @default(true)
  isVerified Boolean @default(false)
  otp String?
  otpExpiresAt DateTime?
  otpVerified Boolean?
  googleId String? @unique
  githubId String? @unique
  provider Provider
  token String? // JWT or session token
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  User
  Admin
  Manager
}

enum Gender {
  Male
  Female
}

enum Provider {
  google
  github
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Float
  category Category? @relation(fields: [categoryId], references: [id])
  categoryId String?
  // priceAfterDiscount 
  slug String? @unique
  coverImage String?
  images  String[]
  stock Int @default(0)
  sold Int @default(0)
  // subcategories 
  // brand 
  // colors or variants
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category {
  id          String   @id @default(uuid())
  name        String
  description String?
  slug        String? @unique
  coverImage String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  products    Product[]
}
